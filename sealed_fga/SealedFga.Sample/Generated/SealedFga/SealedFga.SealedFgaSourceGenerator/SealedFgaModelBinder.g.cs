// <auto-generated>
//     This file was generated by SealedFga. Do not edit it directly.
// </auto-generated>
#nullable enable

using System;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc.Controllers;
using Microsoft.AspNetCore.Mvc.ModelBinding;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.DependencyInjection;

namespace SealedFga.ModelBinding;


public abstract class SealedFgaModelBinder<TAttr>(Type dbContextType) : IModelBinder where TAttr : Attribute
{
    public async Task BindModelAsync(ModelBindingContext context)
    {
        ArgumentNullException.ThrowIfNull(context);

        // Retrieve fga entity parameter, e.g. SecretEntity
        var param = context.ActionContext.ActionDescriptor
            .Parameters
            .OfType<ControllerParameterDescriptor>()
            .FirstOrDefault(p => p.Name == context.FieldName);
        var attr = (TAttr?)param?
            .ParameterInfo
            .GetCustomAttributes(typeof(TAttr), false)
            .FirstOrDefault();
        if (param is null || attr is null)
        {
            return;
        }

        await FgaBind(context, param, attr);
    }

    protected DbContext GetDbContext(ModelBindingContext context)
        => (DbContext)context.HttpContext.RequestServices.GetRequiredService(dbContextType);

    protected abstract Task FgaBind(ModelBindingContext context, ControllerParameterDescriptor param, TAttr attr);
}