<Project Sdk="Microsoft.NET.Sdk">
  <Import Project="../settings.props" />

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <Nullable>enable</Nullable>
    <LangVersion>preview</LangVersion>
    <IncludeBuildOutput>true</IncludeBuildOutput>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>

    <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
    <IsRoslynComponent>true</IsRoslynComponent>

    <RootNamespace>SealedFga</RootNamespace>
    <PackageId>SealedFga</PackageId>
    <Version>0.0.1</Version>
  </PropertyGroup>


  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.Mvc" Version="$(MicrosoftAspNetCoreMvcVersion)" />
    <!--
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="$(MicrosoftCodeAnalysisVersion)">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    -->
    <PackageReference Include="Microsoft.Data.Sqlite" Version="$(MicrosoftDataSqliteVersion)" PrivateAssets="all" GeneratePathProperty="true" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="$(MicrosoftCodeAnalysisVersion)" PrivateAssets="all" />
    <PackageReference Include="TickerQ" Version="$(TickerQVersion)" PrivateAssets="all" />
    <PackageReference Include="TickerQ.EntityFrameworkCore" Version="$(TickerQVersion)" PrivateAssets="all" />
    <PackageReference Include="TickerQ.Utilities" Version="$(TickerQVersion)" PrivateAssets="all" />
    <PackageReference Include="OpenFga.Sdk" Version="$(OpenFgaSdkVersion)" PrivateAssets="all" />
    <PackageReference Include="PolySharp" Version="$(PolySharpVersion)" PrivateAssets="all" />
    <ProjectReference Include="..\..\openfga-language\pkg\csharp\OpenFga.Language.csproj" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup>
    <!-- Enable either THIS for the "internal" -> "public" patched DLL file -->
    <Reference Include="Microsoft.CodeAnalysis.AnalyzerUtilities">
      <HintPath>..\..\Microsoft.CodeAnalysis.AnalyzerUtilities.Public.dll</HintPath>
    </Reference>
    <!--
    <Reference Include="Microsoft.CodeAnalysis.NetAnalyzers">
      <HintPath>..\..\Microsoft.CodeAnalysis.NetAnalyzers.dll</HintPath>
    </Reference>
    -->
    <!-- Or THIS for the real library
    <PackageReference Include="Microsoft.CodeAnalysis.AnalyzerUtilities" Version="$(MicrosoftCodeAnalysisVersion)" PrivateAssets="all" />
    -->
    <PackageReference Include="System.Collections.Immutable" Version="$(SystemCollectionsImmutableVersion)" GeneratePathProperty="true" />
  </ItemGroup>

  <!-- This is needed to ensure that the analyzer DLLs are included in the NuGet package.
       The `Visible` attribute is set to false to prevent them from being visible in the package contents. -->
  <ItemGroup>
    <None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
    <None Include="$(OutputPath)\OpenFga.Language.dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
    <None Include="$(PkgSystem_Collections_Immutable)\lib\netstandard2.0\*.dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
    <None Include="$(PkgMicrosoft_Data_Sqlite)\lib\netstandard2.0\*.dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
    <!--
    <None Include="..\..\Microsoft.CodeAnalysis.AnalyzerUtilities.Public.dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
    <PackageReference Include="Microsoft.CodeAnalysis.AnalyzerUtilities" Version="4.14.0" PrivateAssets="all" ExcludeAssets="all" GeneratePathProperty="true" />
    <None Include="$(PkgMicrosoft_CodeAnalysis_AnalyzerUtilities)\lib\netstandard2.0\*.dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
    -->
  </ItemGroup>

</Project>
