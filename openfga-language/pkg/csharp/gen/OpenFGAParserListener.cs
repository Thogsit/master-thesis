//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from OpenFGAParser.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="OpenFGAParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface IOpenFGAParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="OpenFGAParser.main"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMain([NotNull] OpenFGAParser.MainContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OpenFGAParser.main"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMain([NotNull] OpenFGAParser.MainContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OpenFGAParser.modelHeader"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModelHeader([NotNull] OpenFGAParser.ModelHeaderContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OpenFGAParser.modelHeader"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModelHeader([NotNull] OpenFGAParser.ModelHeaderContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OpenFGAParser.moduleHeader"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModuleHeader([NotNull] OpenFGAParser.ModuleHeaderContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OpenFGAParser.moduleHeader"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModuleHeader([NotNull] OpenFGAParser.ModuleHeaderContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OpenFGAParser.typeDefs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeDefs([NotNull] OpenFGAParser.TypeDefsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OpenFGAParser.typeDefs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeDefs([NotNull] OpenFGAParser.TypeDefsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OpenFGAParser.typeDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeDef([NotNull] OpenFGAParser.TypeDefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OpenFGAParser.typeDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeDef([NotNull] OpenFGAParser.TypeDefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OpenFGAParser.relationDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelationDeclaration([NotNull] OpenFGAParser.RelationDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OpenFGAParser.relationDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelationDeclaration([NotNull] OpenFGAParser.RelationDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OpenFGAParser.relationName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelationName([NotNull] OpenFGAParser.RelationNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OpenFGAParser.relationName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelationName([NotNull] OpenFGAParser.RelationNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OpenFGAParser.relationDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelationDef([NotNull] OpenFGAParser.RelationDefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OpenFGAParser.relationDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelationDef([NotNull] OpenFGAParser.RelationDefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OpenFGAParser.relationDefNoDirect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelationDefNoDirect([NotNull] OpenFGAParser.RelationDefNoDirectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OpenFGAParser.relationDefNoDirect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelationDefNoDirect([NotNull] OpenFGAParser.RelationDefNoDirectContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OpenFGAParser.relationDefPartials"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelationDefPartials([NotNull] OpenFGAParser.RelationDefPartialsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OpenFGAParser.relationDefPartials"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelationDefPartials([NotNull] OpenFGAParser.RelationDefPartialsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OpenFGAParser.relationDefGrouping"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelationDefGrouping([NotNull] OpenFGAParser.RelationDefGroupingContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OpenFGAParser.relationDefGrouping"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelationDefGrouping([NotNull] OpenFGAParser.RelationDefGroupingContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OpenFGAParser.relationRecurse"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelationRecurse([NotNull] OpenFGAParser.RelationRecurseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OpenFGAParser.relationRecurse"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelationRecurse([NotNull] OpenFGAParser.RelationRecurseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OpenFGAParser.relationRecurseNoDirect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelationRecurseNoDirect([NotNull] OpenFGAParser.RelationRecurseNoDirectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OpenFGAParser.relationRecurseNoDirect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelationRecurseNoDirect([NotNull] OpenFGAParser.RelationRecurseNoDirectContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OpenFGAParser.relationDefDirectAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelationDefDirectAssignment([NotNull] OpenFGAParser.RelationDefDirectAssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OpenFGAParser.relationDefDirectAssignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelationDefDirectAssignment([NotNull] OpenFGAParser.RelationDefDirectAssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OpenFGAParser.relationDefRewrite"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelationDefRewrite([NotNull] OpenFGAParser.RelationDefRewriteContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OpenFGAParser.relationDefRewrite"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelationDefRewrite([NotNull] OpenFGAParser.RelationDefRewriteContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OpenFGAParser.relationDefTypeRestriction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelationDefTypeRestriction([NotNull] OpenFGAParser.RelationDefTypeRestrictionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OpenFGAParser.relationDefTypeRestriction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelationDefTypeRestriction([NotNull] OpenFGAParser.RelationDefTypeRestrictionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OpenFGAParser.relationDefTypeRestrictionBase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelationDefTypeRestrictionBase([NotNull] OpenFGAParser.RelationDefTypeRestrictionBaseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OpenFGAParser.relationDefTypeRestrictionBase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelationDefTypeRestrictionBase([NotNull] OpenFGAParser.RelationDefTypeRestrictionBaseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OpenFGAParser.conditions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditions([NotNull] OpenFGAParser.ConditionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OpenFGAParser.conditions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditions([NotNull] OpenFGAParser.ConditionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OpenFGAParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondition([NotNull] OpenFGAParser.ConditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OpenFGAParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondition([NotNull] OpenFGAParser.ConditionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OpenFGAParser.conditionName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditionName([NotNull] OpenFGAParser.ConditionNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OpenFGAParser.conditionName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditionName([NotNull] OpenFGAParser.ConditionNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OpenFGAParser.conditionParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditionParameter([NotNull] OpenFGAParser.ConditionParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OpenFGAParser.conditionParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditionParameter([NotNull] OpenFGAParser.ConditionParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OpenFGAParser.parameterName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterName([NotNull] OpenFGAParser.ParameterNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OpenFGAParser.parameterName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterName([NotNull] OpenFGAParser.ParameterNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OpenFGAParser.parameterType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterType([NotNull] OpenFGAParser.ParameterTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OpenFGAParser.parameterType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterType([NotNull] OpenFGAParser.ParameterTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OpenFGAParser.multiLineComment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiLineComment([NotNull] OpenFGAParser.MultiLineCommentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OpenFGAParser.multiLineComment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiLineComment([NotNull] OpenFGAParser.MultiLineCommentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OpenFGAParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier([NotNull] OpenFGAParser.IdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OpenFGAParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier([NotNull] OpenFGAParser.IdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OpenFGAParser.extended_identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExtended_identifier([NotNull] OpenFGAParser.Extended_identifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OpenFGAParser.extended_identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExtended_identifier([NotNull] OpenFGAParser.Extended_identifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="OpenFGAParser.conditionExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditionExpression([NotNull] OpenFGAParser.ConditionExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="OpenFGAParser.conditionExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditionExpression([NotNull] OpenFGAParser.ConditionExpressionContext context);
}
